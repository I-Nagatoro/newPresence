// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using data.RemoteData.RemoteDataBase;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(RemoteDatabaseContext))]
    partial class RemoteDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.GroupDAO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("groups", "public2");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.PresenceDAO", b =>
                {
                    b.Property<int>("PresenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("presenceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PresenceId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Date");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("groupid");

                    b.Property<bool>("IsAttendance")
                        .HasColumnType("boolean")
                        .HasColumnName("isattendance");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("integer")
                        .HasColumnName("lessonnumber");

                    b.Property<int?>("UserDAOUserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("PresenceId");

                    b.HasIndex("UserDAOUserId");

                    b.ToTable("presence", "public2");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.UserDAO", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fio");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("groupid");

                    b.HasKey("UserId");

                    b.HasIndex("GroupId");

                    b.ToTable("users", "public2");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.PresenceDAO", b =>
                {
                    b.HasOne("data.RemoteData.RemoteDatabase.DAO.UserDAO", null)
                        .WithMany("Presences")
                        .HasForeignKey("UserDAOUserId");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.UserDAO", b =>
                {
                    b.HasOne("data.RemoteData.RemoteDatabase.DAO.GroupDAO", "Group")
                        .WithMany("Users")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.GroupDAO", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("data.RemoteData.RemoteDatabase.DAO.UserDAO", b =>
                {
                    b.Navigation("Presences");
                });
#pragma warning restore 612, 618
        }
    }
}
